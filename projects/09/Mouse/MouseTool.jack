class MouseTool {
    field Mouse mouse;
    field int direction;

    constructor MouseTool new() {
        let mouse = Mouse.new(256, 128);
        do updateStatus(mouse.getX(), mouse.getY());
        let direction = 0;
        return this;
    }

    method void dispose() {
        do mouse.dispose();
        do Memory.deAlloc(this);
        return;
    }

    method void updateStatus(int x, int y) {
        // print "(x, y)    "
        do Output.moveCursor(22, 0);
        do Output.printChar(40);
        do Output.printInt(x);
        do Output.printChar(44); 
        do Output.printInt(y);
        do Output.printChar(41); 
        do Output.printChar(32);
        do Output.printChar(32);
        do Output.printChar(32);
        do Output.printChar(32);
        return;
    }

    method void moveMouse() {
        if (direction = 1) {
            do mouse.moveUp();
        }
        if (direction = 2) {
            do mouse.moveDown();
        }
        if (direction = 3) {
            do mouse.moveLeft();
        } 
        if (direction = 4) {
            do mouse.moveRight();
        }
        do updateStatus(mouse.getX(), mouse.getY());
        do mouse.draw();
        do Sys.wait(2);
        return;
    }
    
    method void run() {
        var char key;
        var boolean running;

        let key = 0;
        let running = true;
        while (running) {
            while (key = 0) {
                let key = Keyboard.keyPressed();
                do Sys.wait(2);
            }

            let direction = 0;
            if (key = 81)  { let running = false; }
            if (key = 131) { let direction = 1; }
            if (key = 133) { let direction = 2; }
            if (key = 130) { let direction = 3; }
            if (key = 132) { let direction = 4; }

            do Sys.wait(100);
            while (~(key = 0)) {
                let key = Keyboard.keyPressed();
                do moveMouse();
            }
        }
        return;
    }
}
